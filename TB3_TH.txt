1. 객체 내 데이터에 대한 접근 제한으로 보호하기 위함
2. 3
3. 캡슐화가 되어 있지 않다.
4.
class Person {
	int age;
public:
	void older() { age++; }
};
5. 뒤에 ;가 없다.
class Circle {
	int radius;
	double getArea();
};
6. 생성자는 리턴값이 없어야 한다.
class Tower {
	int height = 20;
public:
	Tower() { height = 10; }
};
7. Building 클래스에는 기본 생성자(매개변수가 없는 생성자)가 없다.
class Building {
	int floor;
public:
	Building() : Building(1) { }
	Builiding(int s) { floor = s; }
};
8.
Calendar::Calendar() {
	year = 10;
}
int Calendar::getYear() {
	return year;
}
9. 2
10. 3
11.
(1) House::House(int n, int s) { numOfRooms = n; size = s; cout << size << ' ' << numOfRooms << endl; }
(2) House::~House() { cout << size << ' ' << numOfRooms << endl; }
(3) b 생성 -> c 생성 -> a 생성 -> a 소멸 -> d 생성 -> d소멸 -> c 소멸 -> b 소멸
12. c 생성 -> b 생성 -> a 생성 -> a 소멸 -> b 소멸 -> c 소멸
13. 기본 생성자 (매개변수 없는 생성자)가 private에 있음
class TV {
public:
	int channels;
	TV() { channels = 256; } 
	TV(int a) { channels = a; }
};
14. TV 클래스의 멤버 변수 channels는 private의 접근 지정자를 갖고 있으므로, 클래스 외부에서 접근할 수 없다.
class TV {
public:
	int channels;
};
15. TV(), TV(int a)
16. 2
17. 1
18. 1
19. 4
20.
class Family {
	char tel[11];
public:
	int count;
	char address[20];
	Family();
};
21. struct Universe 
	char dateCreated[10];
	char creator[10];
	int size;
public:
	Universe();
	
}